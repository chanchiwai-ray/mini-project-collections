{"version":3,"sources":["components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.js","components/CovidDataGrid/CovidGrid.js","components/CoividDataChart/CovidChart.js","components/CountryPicker/CountryPicker.js","apis/index.js","App.js","index.js","App.module.css","components/Cards/Cards.module.css","components/CovidDataGrid/CovidGrid.module.css"],"names":["module","exports","Counter","end","duration","countUp","useCountUp","start","separator","NumCard","props","Card","className","styles","container","CardContent","style","borderBottom","gutterColor","Typography","color","title","variant","textColor","num","Date","date","toLocaleString","Cards","Fragment","Grid","item","xs","sm","align","isLoading","CircularProgress","data","confirmed","value","lastUpdate","deaths","recovered","CovidGrid","useState","rows","columns","setData","useEffect","country","field","headerName","width","hashMap","forEach","countryRegion","uid","Object","keys","sort","a","b","label","push","map","grid","getRowId","row","loading","Plot","createPlotlyComponent","Plotly","colorMap","CovidChart","name","x","y","type","orientation","marker","values","reduce","bar","i","toLowerCase","provinceState","unshift","layout","height","margin","l","barmode","CountryPicker","onClick","state","setState","FormControl","formControl","InputLabel","htmlFor","NativeSelect","id","onChange","event","target","aria-label","countries","index","useFetch","endpoint","fetch","then","res","json","catch","err","console","log","App","view","setView","setCountry","summary","countrySummary","Container","heading","justify","ButtonGroup","buttonGroup","Button","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31485df5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","import React from \"react\";\n\nimport styles from \"./Cards.module.css\";\nimport { Card, CardContent, Typography, Grid, CircularProgress } from \"@material-ui/core\";\nimport { useCountUp } from 'react-countup';\n\nconst Counter = ({end, duration}) => {\n  const { countUp } = useCountUp({\n    start: 0,\n    end: end,\n    duration: duration,\n    separator: \",\"\n  });\n\n  return (\n    <span>{countUp}</span>\n  );\n};\n\nconst NumCard = (props) => {\n  return (\n    <Card className={styles.container}>\n      <CardContent style={{borderBottom: `8px solid ${props.gutterColor}`}}>\n        <Typography color=\"textSecondary\">{props.title}</Typography>\n        <Typography variant=\"h3\" style={{\"color\": props.textColor}}>\n          <Counter end={props.num} duration={1} />\n        </Typography>\n        <Typography color=\"textSecondary\">{new Date(props.date).toLocaleString(\"en-GB\")}</Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst Cards = (props) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sm={4} align=\"center\">\n        {\n          props.isLoading ?\n          <CircularProgress /> :\n          <NumCard title=\"Confirmed\" textColor=\"#ff6d00\" gutterColor=\"#ff6d00\" num={props.data.confirmed.value} date={props.data.lastUpdate} />\n        }\n      </Grid>\n      <Grid item xs={12} sm={4} align=\"center\">\n        {\n          props.isLoading ?\n          <CircularProgress /> :\n          <NumCard title=\"Deaths\" textColor=\"#d50000\" gutterColor=\"#d50000\" num={props.data.deaths.value} date={props.data.lastUpdate} />\n        }\n      </Grid>\n      <Grid item xs={12} sm={4} align=\"center\">\n        {\n          props.isLoading ?\n          <CircularProgress /> :\n          <NumCard title=\"Recovered\" textColor=\"#64dd17\" gutterColor=\"#64dd17\" num={props.data.recovered.value} date={props.data.lastUpdate} />\n        }\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Cards;","import React, { useEffect, useState } from \"react\";\n\nimport styles from \"./CovidGrid.module.css\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst CovidGrid = (props) => {\n  const [data, setData] = useState({rows: [], columns: []})\n\n  useEffect(() => {\n    if (props.data) {\n      let rows = [];\n      let columns = [];\n      if (props.country === \"\") {\n        rows = [];\n        columns = [\n          { field: \"countryRegion\",  headerName: \"Country\", width: 150},\n          { field: \"confirmed\", headerName: \"Confirmed\", width: 150},\n          { field: \"deaths\", headerName: \"Deaths\", width: 150},\n          { field: \"recovered\", headerName: \"Recovered\", width: 150},\n          { field: \"lastUpdate\", headerName: \"Last Update\", width: 300},\n        ];\n        const hashMap = {};\n        props.data.forEach(item => {\n          if (item.countryRegion in hashMap) {\n            hashMap[item.countryRegion].confirmed += item.confirmed;\n            hashMap[item.countryRegion].deaths += item.deaths;\n            hashMap[item.countryRegion].recovered += item.recovered;\n          } else {\n            hashMap[item.countryRegion] = {uid: item.uid, lastUpdate: new Date(item.lastUpdate).toLocaleString(\"en-GB\"), countryRegion: item.countryRegion, confirmed: item.confirmed, deaths: item.deaths, recovered: item.recovered};\n          }\n        });\n        // Sort by confirmed cases by default\n        Object.keys(hashMap).sort((a, b) => hashMap[b].confirmed - hashMap[a].confirmed).forEach(label => rows.push(hashMap[label]));\n      } else {\n        rows = props.data.map(item => ({...item, lastUpdate: new Date(item.lastUpdate).toLocaleString(\"en-GB\")}));\n        columns = [\n          { field: \"countryRegion\",  headerName: \"Country\", width: 150},\n          { field: \"provinceState\",  headerName: \"Province\", width: 150},\n          { field: \"confirmed\", headerName: \"Confirmed\", width: 150},\n          { field: \"deaths\", headerName: \"Deaths\", width: 150},\n          { field: \"recovered\", headerName: \"Recovered\", width: 150},\n          { field: \"lastUpdate\", headerName: \"Last Update\", width: 300},\n        ];\n      }\n      setData({rows: rows, columns: columns});\n    }\n  }, [props.data, props.country]);\n\n  return (\n      <Grid item xs={12} align=\"center\">\n        <div className={styles.grid}>\n          {\n            props.isLoading ?\n            <CircularProgress /> :\n            <DataGrid \n              rows={data.rows} \n              columns={data.columns}\n              getRowId={(row) => row.uid}\n              loading={props.isLoading}\n            />\n          }\n        </div>\n      </Grid>\n   );\n}\n\nexport default CovidGrid;","import React, { useEffect, useState } from \"react\";\n\nimport { Grid, CircularProgress } from \"@material-ui/core\";\n\nimport Plotly from \"plotly.js-basic-dist\";\nimport createPlotlyComponent from \"react-plotly.js/factory\";\nconst Plot = createPlotlyComponent(Plotly);\n\nconst colorMap = {\"confirmed\": \"rgb(255,109,0)\", \"deaths\": \"rgb(213,0,0)\", \"recovered\": \"rgb(100,221,23)\"};\n\nconst CovidChart = (props) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    if (props.data) {\n      const data = Object.keys(colorMap).map(name => ({\n        x: [],\n        y: [],\n        width: .3,\n        name: name,\n        type: \"bar\",\n        orientation: 'h',\n        marker: {color: colorMap[name]},\n      }));\n      if (props.country === \"\") {\n        const hashMap = {};\n        props.data.forEach(item => {\n          if (item.countryRegion in hashMap) {\n            hashMap[item.countryRegion].confirmed += item.confirmed;\n            hashMap[item.countryRegion].deaths += item.deaths;\n            hashMap[item.countryRegion].recovered += item.recovered;\n          } else {\n            hashMap[item.countryRegion] = {confirmed: item.confirmed, deaths: item.deaths, recovered: item.recovered};\n          }\n        });\n        const labels = Object.keys(hashMap).sort((a, b) => Object.values(hashMap[a]).reduce((x,y) => x+y) - Object.values(hashMap[b]).reduce((x,y) => x+y));\n        labels.forEach(label => {\n          data.forEach((bar, i) => {\n            bar.y.push(label);\n            bar.x.push(hashMap[label][bar.name.toLowerCase()]);\n          });\n        });\n      } else {\n        props.data.forEach(item => {\n          const label = item.provinceState || item.countryRegion;\n          data.forEach(bar => {\n            const name = bar.name;\n            bar.x.unshift(item[name]);\n            bar.y.unshift(label);\n          });\n        });\n      }\n      setData(data);\n    }\n  }, [props.data, props.country]);\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} align=\"center\">\n        {\n          props.isLoading ?\n          <CircularProgress /> :\n          <Plot\n            data={data}\n            layout={{\n              height: 1000,\n              width: 1000,\n              margin: {\n                l: 120\n              },\n              type: \"bar\",\n              orientation: 'h',\n              barmode: \"stack\",\n              title: props.country === \"\" ? \n                    `Summary of Global Cases` : \n                    `Summary of ${props.country}'s Cases`,\n            }}\n          /> \n        }\n      </Grid>\n    </React.Fragment>\n   );\n}\n\nexport default CovidChart;","import React, { useState } from \"react\";\n\nimport styles from \"./CountryPicker.module.css\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport NativeSelect from '@material-ui/core/NativeSelect';;\n\nconst CountryPicker = ({isLoading, data, onClick}) => {\n  const [state, setState] = useState({country: \"\"});\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    setState({\n      ...state,\n      [name]: event.target.value\n    });\n    onClick(event.target.value);\n  };\n\n  return (\n    <Grid>\n      <FormControl className={styles.formControl}>\n        <InputLabel htmlFor=\"select-country\">Select Country</InputLabel>\n          {\n            isLoading ?\n            <CircularProgress /> :\n            <NativeSelect\n              id=\"select-country\"\n              name=\"country\"\n              value={state.country}\n              onChange={handleChange}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              {\n                data.countries.map((country, index) => (\n                  <option key={index} value={country.name}>{country.name}</option>\n                ))\n              }\n            </NativeSelect>\n          }\n      </FormControl>\n    </Grid>\n  );\n};\n\nexport default  CountryPicker;","import { useEffect, useState } from \"react\";\n\nconst BASE_URL = \"https://covid19.mathdro.id/api\";\n\nexport const useFetch = (endpoint) => {\n  const [state, setState] = useState({data: null, isLoading: true});\n\n  useEffect(() => {\n    setState((state) => ({data: state.data, isLoading: true}));\n    fetch(BASE_URL + endpoint)\n    .then(res => res.json())\n    .then(data => setState({data: data, isLoading: false}))\n    .catch(err => console.log(err));\n\n  }, [endpoint]);\n\n  return state;\n};\n\n// /api: global summary\nexport const useFetchGlobalSummary = () => {\n  return useFetch(\"/\");\n};\n\n// /api/confirmed: global cases per region sorted by confirmed cases\nexport const useFetchGlobalConfirmed = () => {\n  return useFetch(\"/confirmed\");\n};\n\n// /api/recovered: global cases per region sorted by recovered cases\nexport const useFetchGlobalRecovered = () => {\n  return useFetch(\"/recovered\");\n};\n\n// /api/deaths: global cases per region sorted by death toll\nexport const useFetchGlobalDeaths = () => {\n  return useFetch(\"/deaths\");\n};\n\n// /api/daily: global cases per day\nexport const useFetchDaily = () => {\n  return useFetch(\"/daily\");\n};\n\n// /api/daily/[date]: detail of updates in a [date] (e.g. /api/daily/2-14-2020)\nexport const useFetchDailyAt = (date) => {\n  return useFetch(`/daily/${date}`);\n};\n\n// /api/countries: all countries and their ISO codes\nexport const useFetchCountryNames = () => {\n  return useFetch(\"/countries\");\n};\n\n// /api/countries/[country]: a [country] summary (e.g. /api/countries/Indonesia or /api/countries/USA or /api/countries/CN)\nexport const useFetchCountrySummary = (name) => {\n  return useFetch(`/countries/${name}`);\n};\n\n// /api/countries/[country]/confirmed: a [country] cases per region sorted by confirmed cases\nexport const useFetchCountryConfirmed = (name) => {\n  return useFetch(`/countries/${name}/confirmed`);\n};\n\n// /api/countries/[country]/recovered: a [country] cases per region sorted by recovered cases\nexport const useFetchCountryRecovered = (name) => {\n  return useFetch(`/countries/${name}/recovered`);\n};\n\n// /api/countries/[country]/deaths: a [country] cases per region sorted by death toll\nexport const useFetchCountryDeaths = (name) => {\n  return useFetch(`/countries/${name}/deaths`);\n};","import React, { useState } from \"react\";\n\nimport { Container, Grid, Typography, Button, ButtonGroup } from \"@material-ui/core\";\n\nimport styles from \"./App.module.css\";\nimport Cards from \"./components/Cards/Cards\";\nimport CovidGrid from \"./components/CovidDataGrid/CovidGrid\";\nimport CovidChart from \"./components/CoividDataChart/CovidChart\";\nimport CountryPickers from \"./components/CountryPicker/CountryPicker\";\n\nimport { useFetch, useFetchCountryNames } from \"./apis\";\n\n\nconst App = () => {\n  const [view, setView] = useState(\"graph\");\n  const [country, setCountry] = useState(\"\");\n  const countries = useFetchCountryNames();\n  const summary = useFetch(country === \"\" ? \"/\" : `/countries/${country}`);\n  const countrySummary = useFetch(country === \"\" ? \"/confirmed\" : `/countries/${country}/confirmed`);\n\n  const selectCountry = (country) => {\n    setCountry(country);\n  };\n\n  return (\n    <Container className={styles.container}>\n      <Grid>\n        <Typography align=\"center\" variant=\"h3\" className={styles.heading}>\n          COVID-19 Case Summary\n        </Typography>\n      </Grid>\n      <Grid container justify=\"center\" >\n        <CountryPickers isLoading={countries.isLoading} data={countries.data} onClick={selectCountry} />\n      </Grid>\n      <Grid container justify=\"center\" >\n        <Cards isLoading={summary.isLoading} data={summary.data}/>\n      </Grid>\n      <Grid container justify=\"center\">\n        <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\" className={styles.buttonGroup}>\n          <Button onClick={() => setView(\"table\")}>Table</Button>\n          <Button onClick={() => setView(\"graph\")}>Graph</Button>\n        </ButtonGroup>\n      </Grid>\n      <Grid container justify=\"center\" >\n          {\n            view === \"graph\" ?\n            <CovidChart \n              isLoading={countrySummary.isLoading}\n              data={countrySummary.data} \n              country={country} \n            /> :\n            <CovidGrid\n              isLoading={countrySummary.isLoading}\n              data={countrySummary.data} \n              country={country} \n            />\n          }\n      </Grid>\n    </Container>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"heading\":\"App_heading__2nYdz\",\"buttonGroup\":\"App_buttonGroup__23NLy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"CovidGrid_grid__RbHtT\"};"],"sourceRoot":""}